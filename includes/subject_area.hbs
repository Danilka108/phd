<hgroup>
  <h2 id="subject_analysis">Анализ предметной области</h2>
  <hgroup>
    <h3 id="subject_desc">Обзор предметной области</h3>
    <hgroup>
      <h4>Контекст применения и особенности среды</h4>
      <p>
        Разрабатываемая подсистема предназначена для эксплуатации в составе системы контроля и управления доступом
        (СКУД),
        интегрированной в группу лифтов. Особенностью данной среды является ее изолированность: устройства функционируют
        без
        постоянного подключения к внешним сетям, что исключает возможность использования облачных сервисов, публичных
        репозиториев и централизованных удостоверяющих центров. Это накладывает ограничения на процессы установки,
        конфигурации и сопровождения программных компонентов системы.
      </p>
      <p>
        Аппаратная платформа, на которой развёртываются компоненты СКУД, обладает ограниченными вычислительными
        ресурсами,
        что требует особого подхода к разработке и внедрению программного обеспечения. В условиях отсутствия доступа к
        внешним ресурсам и ограничений по ресурсам, традиционные методы ручного развёртывания и администрирования
        становятся
        неэффективными и подвержены ошибкам. Исследования показывают, что ручное развёртывание встраиваемых систем часто
        приводит к увеличению времени разработки и повышению вероятности ошибок.
      </p>
      <p>
        Кроме того, ручное конфигурирование и сопровождение компонентов системы увеличивает риск несогласованности
        версий,
        ошибок конфигурации и затрудняет масштабирование системы. В условиях изолированной среды эти проблемы
        усугубляются невозможностью оперативного вмешательства администратора и отсутствием централизованного контроля.
      </p>
      <p>
        Для обеспечения надёжности, воспроизводимости и снижения эксплуатационных затрат необходимо внедрение
        автоматизированных процессов развертывания и администрирования, адаптированных к условиям изолированной среды и
        ограниченных ресурсов. Подходы, такие как Zero-Touch Deployment, позволяют автоматизировать настройку устройств
        без ручного вмешательства, что особенно актуально в рассматриваемом контексте.
      </p>
    </hgroup>
    <hgroup>
      <h4>Аппаратнаые ограничения и программная платформа</h4>
      <p>
        Система контроля и управления доступом (СКУД) для группы лифтов функционирует на базе встраиваемых устройств с
        ограниченными вычислительными ресурсами и энергонезависимой памятью. Применяемая платформа основана на модуле
        CM4-IO-WIRELESS-BASE-B с вычислительным модулем CM4102032, включающим 64-битный процессор ARM Cortex-A72, 2 ГБ
        оперативной памяти LPDDR4-3200 SDRAM и 32 ГБ eMMC. Для сетевого взаимодействия поддерживаются интерфейсы
        Gigabit
        Ethernet, WiFi IEEE 802.11 и модули сотовой связи 3G/4G/5G.
        Операционная система представляет собой оптимизированную сборку Linux, ориентированную на минимальную нагрузку
        на
        систему, без графической среды. Такое программное окружение обеспечивает базовые механизмы сетевого
        взаимодействия
        и
        межпроцессного обмена, но требует крайне бережного отношения к ресурсам — как по вычислениям, так и по объёму
        памяти.
        Подобная архитектура ограничивает возможности использования классических инструментов управления
        инфраструктурой,
        включая контейнеризацию, внешние API и облачные средства мониторинга. Встраиваемые устройства требуют
        специализированных решений, способных функционировать автономно и эффективно в условиях сниженной
        производительности
        и ограниченного хранилища.
      </p>
    </hgroup>
    <hgroup>
      <h4>Проблематика ручного развертывания и конфигурирования</h4>
      <p>
        В условиях эксплуатации СКУД в изолированной среде с использованием встраиваемых устройств ручные методы
        развертывания и конфигурирования компонентов приводят к существенным организационным и техническим проблемам.
        Такие
        подходы плохо масштабируются, требуют значительных трудозатрат и не обеспечивают воспроизводимости
        конфигураций
        при
        развертывании на множестве узлов.
      </p>
      <p>
        К типичным последствиям ручного развертывания относят:
      </p>
      <ul class="dashenum">
        <li>несогласованность версий и параметров компонентов</li>
        <li>ошибки, возникающие из-за человеческого фактора</li>
        <li>отсутствие механизма проверки целостности исполняемых файлов</li>
        <li class="last">невозможность централизованного контроля и аудита</li>
      </ul>
      <p>
        Эти проблемы особенно критичны при эксплуатации в условиях ограниченного физического доступа к устройствам, а
        также при необходимости быстрого восстановления или повторного развертывания на новых узлах. Исследования
        подчеркивают, что при использовании ручных сценариев существенно возрастает совокупная стоимость владения
        системой
        (TCO) и увеличивается вероятность возникновения непредсказуемых отказов.
      </p>
      <p>
        Особое внимание в контексте изолированной среды следует уделить вопросам информационной безопасности,
        связанным
        с
        взаимодействием между устройствами системы. В отсутствие централизованных удостоверяющих центров или
        защищенных
        внешних каналов связи ручная конфигурация параметров соединения и обмена данными не гарантирует надежную
        защиту
        от
        атак типа man-in-the-middle, повторной передачи или подмены сообщений.
      </p>
      <p>
        Кроме того, при ручной настройке каналов взаимодействия между устройствами зачастую отсутствуют:
      </p>
      <ul class="dashenum">
        <li>взаимная аутентификация участников обмена</li>
        <li>шифрование передаваемых сообщений</li>
        <li>механизмы защиты от повторного воспроизведения команд</li>
        <li class="last">проверка целостности протокольных структур</li>
      </ul>
      <p>
        Без этих средств существует риск перехвата управляющих команд, внедрения вредоносных конфигураций и
        компрометации
        внутренней логики работы системы. В литературе подчёркивается, что даже в оффлайн-средах, обмен данными между
        узлами должен происходить с использованием предварительно согласованных криптографических ключей, с
        применением
        механизмов идентификации и контроля подлинности сообщений.
      </p>
      <p>
        Таким образом, ручное управление развертыванием и конфигурацией в условиях изолированной среды создает не
        только
        эксплуатационные затруднения, но и формирует потенциальные уязвимости при взаимодействии устройств между
        собой.
      </p>
    </hgroup>
  </hgroup>
  <hgroup>
    <h3 id="subject_cmp">Анализ и сравнение существующих решений</h3>
    <p>
      Задачи автоматизированного развертывания и администрирования программных компонентов на встраиваемых устройствах
      традиционно решаются в смежных областях — таких как DevOps, системное программирование и управление встроенными
      системами. Наиболее известные решения в этих сферах предоставляют богатую функциональность, однако не всегда
      подходят для условий изолированной среды и эксплуатации в составе конечного продукта, как в случае СКУД для
      группы лифтов.
    </p>


    <p>
      Для анализа были отобраны следующие категории решений:
    </p>
    <ul class="dashenum">
      <li>Инструменты конфигурационного управления общего назначения: Ansible, Puppet, SaltStack</li>
      <li>Платформы для обновления и оркестрации встроенных устройств: Mender, Balena</li>
      <li class="last">Контейнерные решения: Docker и Docker Compose</li>
    </ul>
    <p>
      В <a class="link" href="#analogues">таблице</a> представлены сравнительные характеристики указанных
      инструментов по ряду ключевых критериев:
    </p>
    <ul class="dashenum">
      <li>возможность автономной установки без доступа к интернету</li>
      <li>пригодность к работе без участия администратора</li>
      <li>требования к системным ресурсам</li>
      <li>централизованное управление</li>
      <li>поддержка кастомизации и конфигурации отдельных сервисов</li>
      <li class="last">готовность к интеграции в конечный программный продукт</li>
    </ul>
    <table style="font-size: 12pt" id="analogues">
      <caption>
        <span>Сравнительный анализ существующих решений</span>
      </caption>
      <thead>
        <tr>
          <th>Характеристика</th>
          <th>Ansible</th>
          <th>Puppet/SaltStack</th>
          <th>Mender</th>
          <th>Balena</th>
          <th>Docker</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Офлайн-установка</td>
          <td>Затруднена</td>
          <td>Затруднена</td>
          <td>Требует сервер</td>
          <td>Требует сервер</td>
          <td>Требует подготовку образов</td>
        </tr>
        <tr data-split="avoid">
          <td>
            Работа без участия администратора после установки
          </td>
          <td>Нет</td>
          <td>Частично</td>
          <td>Нет</td>
          <td>Нет</td>
          <td>Нет</td>
        </tr>
        <tr>
          <td>Требования к памяти</td>
          <td>Средние</td>
          <td>Высокие</td>
          <td>Высокие</td>
          <td>Высокие</td>
          <td>Высокие</td>
        </tr>
        <tr>
          <td>Поддержка индивидуальных параметров сервисов</td>
          <td>Да</td>
          <td>Да</td>
          <td>Ограничено</td>
          <td>Ограничено</td>
          <td>Сложно реализуется</td>
        </tr>
        <tr>
          <td>Готовность к встраиванию в конечный продукт</td>
          <td>Низкая</td>
          <td>Низкая</td>
          <td>Низкая</td>
          <td>Низкая</td>
          <td>Средняя</td>
        </tr>
        <tr>
          <td>Поддержка централизованного управления</td>
          <td>Да</td>
          <td>Да</td>
          <td>Да</td>
          <td>Да</td>
          <td>Нет</td>
        </tr>
        <tr>
          <td>Порог входа для пользователя</td>
          <td>Высокий</td>
          <td>Высокий</td>
          <td>Средний</td>
          <td>Средний</td>
          <td>Средний</td>
        </tr>
      </tbody>
    </table>

    <p>
      Системы вроде Ansible предоставляют средства управления конфигурациями на основе сценариев и плейбуков, однако
      требуют предварительной подготовки всех зависимостей и скриптов, что ограничивает их применимость в
      изолированной среде. Они также предполагают ручное участие администратора на этапе подготовки окружения и не
      поддерживают контроль версий исполняемых компонентов без внешней инфраструктуры.
    </p>
    <p>
      Puppet и SaltStack основаны на агентной архитектуре и требуют запуска серверной части, что делает их трудно
      воспроизводимыми в условиях ограниченных ресурсов и отсутствия сети. Кроме того, они накладывают высокие
      требования к обучению и сопровождению — система не может функционировать без предварительной настройки всех
      модулей и агентов.
    </p>
    <p>
      Mender и Balena разрабатывались специально для управления обновлениями встроенных систем, но полагаются на
      работу с центральным сервером (например, Mender Server или BalenaCloud). Их архитектура предполагает установку
      серверов управления, баз данных и других зависимостей, что делает их неподходящими для встроенного использования
      в составе конечного программного продукта, устанавливаемого в офлайн-режиме
    </p>
    <p>
      Docker и Docker Compose обеспечивают удобство сборки и изоляции сервисов, однако предъявляют высокие требования
      к объему памяти и постоянного хранилища, что критично для встраиваемых платформ. Также их использование требует
      загрузки образов из внешних репозиториев или настройки локального registry, что невозможно без подключения к
      сети.
    </p>
    <p>
      Таким образом, ни одно из рассмотренных решений не соответствует совокупности требований, предъявляемых к
      подсистеме администрирования СКУД для группы лифтов. Это обосновывает необходимость разработки
      специализированного решения, адаптированного под ограничения аппаратной платформы и специфические условия
      эксплуатации.
    </p>
  </hgroup>
  <hgroup>
    <h3 id="tasks">Постановка задачи</h3>
    <p>
      Учитывая специфику условий эксплуатации, требуется разработка инструментов и механизмов,
      обеспечивающих автоматизированное развертывание, централизованное управление состоянием компонентов, защиту
      передаваемых данных и устойчивость к сбоям.
    </p>
    <p>
      Таким образом, целью работы является разработка подсистемы администрирования и инструментов развертывания СКУД
      группы лифтов.
    </p>
    <p>
      Для достижения поставленной цели в рамках настоящей работы решаются следующие задачи:
    </p>
    <ul class="dotenum">
      <li>Разработать архитектуру подсистемы управления. Архитектура должна учитывать изолированную среду эксплуатации и
        предусматривать взаимодействие менеджера, агентов и контроллеров через защищённые каналы связи без внешних
        зависимостей</li>

      <li>Определить состав установочного пакета. Пакет должен включать все необходимые контроллеры, зависимости и
        сценарии в самодостаточной форме, пригодной для автономного развёртывания на устройствах без подключения к
        интернету</li>

      <li>Реализовать механизм защищенного взаимодействия компонентов системы. Взаимодействие между менеджером и
        агентами должно осуществляться с использованием криптографических протоколов, обеспечивающих аутентификацию и
        конфиденциальность без участия удостоверяющих центров</li>

      <li class="last">Создать утилиту командной строки для взаимодействия с подсистемой. Утилита должна обеспечивать
        управление установкой, конфигурацией и состоянием сервисов через локальные и удалённые каналы связи, быть
        доступным в офлайн-режиме и не требовать графического окружения</li>
    </ul>
    <p>
      Результатом выполнения данных задач должна стать устойчивая, независимая от внешней инфраструктуры подсистема
      администрирования, обеспечивающая полный цикл управления программными сервисами СКУД на множестве устройств,
      интегрируемая в состав конечного продукта и ориентированная на промышленную эксплуатацию в условиях закрытой сети.
    </p>
  </hgroup>
</hgroup>